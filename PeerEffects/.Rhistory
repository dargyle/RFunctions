friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
# Get the subgraph with only these friends
net.sub <- net %s% friend.list
delete.vertices(net.sub,which(degree(net.sub)>20))
delete.vertices(net.sub,which(degree(net.sub)==0))
# Survey some of the vertices
n <- network.size(net.sub)
set.seed(42)
surveyed <- sample(1:n,n/2)
not.surveyed <- setdiff(1:n,surveyed)
s.indicator <- 1:n %in% surveyed
net.sub %v% 'surveyed' <- s.indicator
# Find missing edges
edge.missing <- outer(s.indicator,s.indicator,'+')>0
net.sub %e% 'missing' <- edge.missing
# Get the positions from the graph
positions <- gplot(net.sub)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
#This will work for the first figure
# The second figure will have these two again, with a 3rd and 4th panel showing 2 graphical reconstructions I make up
# List of missing edges (those with both ends unobserved)
# I will need to make this generalizable, but for now I know there are 8 missing edges
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
net.sub2 <- net.sub
net.sub3 <- net.sub
set.seed(65)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
### Make a figure to illustrate graphical reconstruction
library(sna)
library(foreign)
### I will do this taking a subset of a network, here the 28th
adjacency <- read.csv(file=paste('./DiffusionOfMicrofinance/Data/NetworkData/',
'AdjacencyMatrices/adj_',
'allVillageRelationships',
'_HH_',
'vilno_',
28,
'.csv',
sep=''),
header=FALSE)
controls <- read.dta('./DiffusionOfMicrofinance/Data/DemographicsAndOutcomes/household_characteristics2.dta')
controls.net <- controls[controls$village==vilno,controls.list]
net <- network(adjacency, directed=FALSE)
# Get a list of a node and their friends
friend.list <- get.neighborhood(net,8)
# Take the friends of one more person
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
# Get the subgraph with only these friends
net.sub <- net %s% friend.list
delete.vertices(net.sub,which(degree(net.sub)>20))
delete.vertices(net.sub,which(degree(net.sub)==0))
# Survey some of the vertices
n <- network.size(net.sub)
set.seed(42)
surveyed <- sample(1:n,n/2)
not.surveyed <- setdiff(1:n,surveyed)
s.indicator <- 1:n %in% surveyed
net.sub %v% 'surveyed' <- s.indicator
# Find missing edges
edge.missing <- outer(s.indicator,s.indicator,'+')>0
net.sub %e% 'missing' <- edge.missing
# Get the positions from the graph
positions <- gplot(net.sub)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
#This will work for the first figure
# The second figure will have these two again, with a 3rd and 4th panel showing 2 graphical reconstructions I make up
# List of missing edges (those with both ends unobserved)
# I will need to make this generalizable, but for now I know there are 8 missing edges
net.sub2 <- net.sub
net.sub3 <- net.sub
set.seed(65)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
dev.off()
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
dev.off()
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
### Make a figure to illustrate graphical reconstruction
library(sna)
library(foreign)
### I will do this taking a subset of a network, here the 28th
adjacency <- read.csv(file=paste('./DiffusionOfMicrofinance/Data/NetworkData/',
'AdjacencyMatrices/adj_',
'allVillageRelationships',
'_HH_',
'vilno_',
28,
'.csv',
sep=''),
header=FALSE)
controls <- read.dta('./DiffusionOfMicrofinance/Data/DemographicsAndOutcomes/household_characteristics2.dta')
controls.net <- controls[controls$village==vilno,controls.list]
net <- network(adjacency, directed=FALSE)
# Get a list of a node and their friends
friend.list <- get.neighborhood(net,8)
# Take the friends of one more person
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
# Get the subgraph with only these friends
net.sub <- net %s% friend.list
delete.vertices(net.sub,which(degree(net.sub)>20))
delete.vertices(net.sub,which(degree(net.sub)==0))
# Survey some of the vertices
n <- network.size(net.sub)
set.seed(42)
surveyed <- sample(1:n,n/2)
not.surveyed <- setdiff(1:n,surveyed)
s.indicator <- 1:n %in% surveyed
net.sub %v% 'surveyed' <- s.indicator
# Find missing edges
edge.missing <- outer(s.indicator,s.indicator,'+')>0
net.sub %e% 'missing' <- edge.missing
# Get the positions from the graph
positions <- gplot(net.sub)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
#This will work for the first figure
# The second figure will have these two again, with a 3rd and 4th panel showing 2 graphical reconstructions I make up
# List of missing edges (those with both ends unobserved)
# I will need to make this generalizable, but for now I know there are 8 missing edges
net.sub2 <- net.sub
net.sub3 <- net.sub
set.seed(65)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
head.to.add <- sample(not.surveyed,8,replace=TRUE)
tail.to.add <- sample(not.surveyed,8,replace=TRUE)
add.edges(net.sub3,head.to.add,tail.to.add)
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
net.temp <- net.sub
net.temp[edge.missing] <- 0
net.temp
net.temp <- net.sub
net.temp[!edge.missing] <- 0
net.temp
net.sub
24_9
24+9
### Make a figure to illustrate graphical reconstruction
library(sna)
library(foreign)
### I will do this taking a subset of a network, here the 28th
adjacency <- read.csv(file=paste('./DiffusionOfMicrofinance/Data/NetworkData/',
'AdjacencyMatrices/adj_',
'allVillageRelationships',
'_HH_',
'vilno_',
28,
'.csv',
sep=''),
header=FALSE)
controls <- read.dta('./DiffusionOfMicrofinance/Data/DemographicsAndOutcomes/household_characteristics2.dta')
controls.net <- controls[controls$village==vilno,controls.list]
net <- network(adjacency, directed=FALSE)
# Get a list of a node and their friends
friend.list <- get.neighborhood(net,8)
# Take the friends of one more person
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
# Get the subgraph with only these friends
net.sub <- net %s% friend.list
delete.vertices(net.sub,which(degree(net.sub)>20))
delete.vertices(net.sub,which(degree(net.sub)==0))
# Survey some of the vertices
n <- network.size(net.sub)
set.seed(42)
surveyed <- sample(1:n,n/2)
not.surveyed <- setdiff(1:n,surveyed)
s.indicator <- 1:n %in% surveyed
net.sub %v% 'surveyed' <- s.indicator
# Find missing edges
edge.missing <- outer(s.indicator,s.indicator,'+')>0
net.sub %e% 'missing' <- edge.missing
# Get the positions from the graph
positions <- gplot(net.sub)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
#This will work for the first figure
# The second figure will have these two again, with a 3rd and 4th panel showing 2 graphical reconstructions I make up
# List of missing edges (those with both ends unobserved)
# I will need to make this generalizable, but for now I know there are 9 missing edges
# Delete the unobserved edges
net.temp <- net.sub
net.temp[!edge.missing] <- 0
net.sub2 <- net.sub
net.sub3 <- net.sub
#set.seed(65)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
cbind(head.to.add,tail.to.add)
set.seed(65)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
cbind(head.to.add,tail.to.add)
set.seed(66)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
cbind(head.to.add,tail.to.add)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
cbind(head.to.add,tail.to.add)
### Make a figure to illustrate graphical reconstruction
library(sna)
library(foreign)
### I will do this taking a subset of a network, here the 28th
adjacency <- read.csv(file=paste('./DiffusionOfMicrofinance/Data/NetworkData/',
'AdjacencyMatrices/adj_',
'allVillageRelationships',
'_HH_',
'vilno_',
28,
'.csv',
sep=''),
header=FALSE)
controls <- read.dta('./DiffusionOfMicrofinance/Data/DemographicsAndOutcomes/household_characteristics2.dta')
controls.net <- controls[controls$village==vilno,controls.list]
net <- network(adjacency, directed=FALSE)
# Get a list of a node and their friends
friend.list <- get.neighborhood(net,8)
# Take the friends of one more person
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
friend.list <- c(get.neighborhood(net,friend.list[1]),friend.list)
# Get the subgraph with only these friends
net.sub <- net %s% friend.list
delete.vertices(net.sub,which(degree(net.sub)>20))
delete.vertices(net.sub,which(degree(net.sub)==0))
# Survey some of the vertices
n <- network.size(net.sub)
set.seed(42)
surveyed <- sample(1:n,n/2)
not.surveyed <- setdiff(1:n,surveyed)
s.indicator <- 1:n %in% surveyed
net.sub %v% 'surveyed' <- s.indicator
# Find missing edges
edge.missing <- outer(s.indicator,s.indicator,'+')>0
net.sub %e% 'missing' <- edge.missing
# Get the positions from the graph
positions <- gplot(net.sub)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
dev.off()
#This will work for the first figure
# The second figure will have these two again, with a 3rd and 4th panel showing 2 graphical reconstructions I make up
# List of missing edges (those with both ends unobserved)
# I will need to make this generalizable, but for now I know there are 9 missing edges
# Delete the unobserved edges
net.temp <- net.sub
net.temp[!edge.missing] <- 0
net.sub2 <- net.temp
net.sub3 <- net.temp
set.seed(66)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
add.edges(net.sub2,head.to.add,tail.to.add)
head.to.add <- sample(not.surveyed,9,replace=TRUE)
tail.to.add <- sample(not.surveyed,9,replace=TRUE)
add.edges(net.sub3,head.to.add,tail.to.add)
par(mfrow=c(2,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
par(mfrow=c(2,2),mgp=c(.1,1,0),mar=rep(1,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
par(mfrow=c(2,2),mgp=c(.1,1,0),mar=rep(2,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub2, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R1)',cex.sub = 1.5, font.sub = 2)
gplot(net.sub3, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(R2)',cex.sub = 1.5, font.sub = 2)
?pdf
pdf(file="samplednet.pdf",family='Times')
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=4)
par(mfrow=c(1,2),mgp=c(.1,1,0))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=4)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=rep(2,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=4.5)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=rep(2,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=4.5)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=rep(2,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=3.5)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=rep(2,4))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=3.5)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=c(2,2,2,3))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
pdf(file="samplednet.pdf",family='Times',width=7,height=3.5)
par(mfrow=c(1,2),mgp=c(.1,1,0),mar=c(3,2,2,2))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1))
title(sub='(A)',cex.sub = 1, font.sub = 1)
#Set missing nodes transparency to 0 using the edge.missing matrix
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.col=matrix(rgb(0, 0, 0, edge.missing), nrow=n))
title(sub='(B)',cex.sub = 1, font.sub = 1)
dev.off()
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=!edgemissing)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=!edge.missing)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=!edge.missing+1)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=!edge.missing+2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=!edge.missing)
blah <- matrix(1,n,n)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah*2)
blah[s.indicator,s.indicator] <- 2
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah*2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
hist(blah)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=as.vector(blah))
as.vector(blah)
blah <- matrix(1,n,n)
blah[s.indicator,s.indicator] <- 1
blah <- matrix(2,n,n)
blah[s.indicator,s.indicator] <- 1
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=as.vector(blah))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
?gplot
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'+'))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'*'))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'*')+1)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'+'))
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'+')+1)
blah <- matrix(1,n,n)
blah[surveyed,survyed] <- 2
blah[surveyed,surveyed] <- 2
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=outer(s.indicator,s.indicator,'+')+1)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=surveyed)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
hist(blah)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
blah
blah <- matrix(1,n,n)
blah[notsurveyed,notsurveyed] <- 2
blah[not.surveyed,not.surveyed] <- 2
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
blah <- matrix(1,n,n)
blah[not.surveyed,surveyed] <- 2
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
blah <- matrix(1,n,n)
blah
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah*2)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah+1)
blah <- matrix(2,n,n)
blah[not.surveyed,not.surveyed] <- 1
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah+1)
blah
his(blah)
hist(blah)
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
blah <- matrix(3,n,n)
blah[not.surveyed,not.surveyed] <- 1
gplot(net.sub, usearrows=FALSE, coord=positions, edge.lwd=2, vertex.col=(s.indicator+1), edge.lty=blah)
